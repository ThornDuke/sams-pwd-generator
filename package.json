{
  "name": "sams-pw-gen",
  "displayName": "Sam's Passwords Generator",
  "description": "The definitive solution to generate secure passwords in VSCode",
  "author": "Thorn Duke",
  "publisher": "ThornDuke",
  "version": "1.3.1",
  "icon": "resources/icon.png",
  "galleryBanner": {
    "theme": "dark",
    "color": "#001b33"
  },
  "license": "LICENSE",
  "engines": {
    "vscode": "^1.85.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "passwords",
    "security"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "sams-pw-gen.getpwd8",
        "title": "Password 8 char long"
      },
      {
        "command": "sams-pw-gen.getpwd9",
        "title": "Password 9 char long"
      },
      {
        "command": "sams-pw-gen.getpwd10",
        "title": "Password 10 char long"
      },
      {
        "command": "sams-pw-gen.getpwd11",
        "title": "Password 11 char long"
      },
      {
        "command": "sams-pw-gen.getpwd12",
        "title": "Password 12 char long"
      },
      {
        "command": "sams-pw-gen.getpwd13",
        "title": "Password 13 char long"
      },
      {
        "command": "sams-pw-gen.getpwd14",
        "title": "Password 14 char long"
      },
      {
        "command": "sams-pw-gen.getpwd15",
        "title": "Password 15 char long"
      },
      {
        "command": "sams-pw-gen.getpwd16",
        "title": "Password 16 char long"
      },
      {
        "command": "sams-pw-gen.generateAtCursor",
        "title": "Generate Password At Cursor"
      },
      {
        "command": "sams-pw-gen.askUser",
        "title": "Password of any length"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "when": "editorTextFocus && config.sampwdgenerator.showContextMenuCommand",
          "command": "sams-pw-gen.generateAtCursor",
          "group": "sams-pw-gen"
        }
      ]
    },
    "configuration": [
      {
        "title": "Sam's Password Generator",
        "properties": {
          "sampwdgenerator.passwords": {
            "type": "number",
            "default": 10,
            "minimum": 1,
            "maximum": 50,
            "order": 0,
            "markdownDescription": "Amount of password produced each time the command is called. Default is `10`."
          },
          "sampwdgenerator.uppercases": {
            "type": "string",
            "default": "ABCDEFGHIJKLMNOPQRSTUVWXYZ",
            "minLength": 1,
            "maxLength": 200,
            "order": 1,
            "markdownDescription": "A string containing the uppercase characters used to construct passwords."
          },
          "sampwdgenerator.uppercaseOccurrences": {
            "type": "number",
            "default": 1,
            "minimum": 1,
            "maximum": 2,
            "enum": [
              1,
              2
            ],
            "order": 2,
            "markdownDescription": "Minimum amount of uppercase characters contained in each password. Default is `1`."
          },
          "sampwdgenerator.lowercases": {
            "type": "string",
            "default": "abcdefghijklmnopqrstuvwxyz",
            "minLength": 1,
            "maxLength": 200,
            "order": 3,
            "markdownDescription": "A string containing the lowercase characters used to construct passwords."
          },
          "sampwdgenerator.lowercaseOccurrences": {
            "type": "number",
            "default": 1,
            "minimum": 1,
            "maximum": 2,
            "enum": [
              1,
              2
            ],
            "order": 4,
            "markdownDescription": "Minimum amount of lowercase characters contained in each password. Default is `1`."
          },
          "sampwdgenerator.numbers": {
            "type": "string",
            "default": "0123456789",
            "minLength": 1,
            "maxLength": 200,
            "order": 5,
            "markdownDescription": "A string containing the numbers used to construct passwords."
          },
          "sampwdgenerator.numberOccurrences": {
            "type": "number",
            "default": 1,
            "minimum": 1,
            "maximum": 2,
            "enum": [
              1,
              2
            ],
            "order": 6,
            "markdownDescription": "Minimum amount of digits contained in each password. Default is `1`."
          },
          "sampwdgenerator.symbols": {
            "type": "string",
            "default": "ยฃ$%&*ยง#@",
            "minLength": 1,
            "maxLength": 200,
            "order": 7,
            "markdownDescription": "A string containing the symbols used to construct passwords."
          },
          "sampwdgenerator.symbolOccurrences": {
            "type": "number",
            "default": 1,
            "minimum": 1,
            "maximum": 2,
            "enum": [
              1,
              2
            ],
            "order": 8,
            "markdownDescription": "Minimum amount of special characters contained in each password. Default is `1`."
          },
          "sampwdgenerator.lengthAtCursor": {
            "type": "number",
            "default": 12,
            "minimum": 8,
            "maximum": 64,
            "order": 9,
            "markdownDescription": "Length of the password generated at the cursor position. Default is `12`."
          },
          "sampwdgenerator.showContextMenuCommand": {
            "type": "boolean",
            "default": true,
            "order": 10,
            "markdownDescription": "Show the command `Generate Password At Cursor` in the context menu. Default is `true`."
          }
        }
      }
    ]
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/ThornDuke/sams-pwd-generator.git"
  },
  "bugs": {
    "url": "https://github.com/ThornDuke/sams-pwd-generator/issues"
  },
  "homepage": "https://github.com/ThornDuke/sams-pwd-generator#readme",
  "pricing": "Free",
  "scripts": {
    "vscode:prepublish": "npm run esbuild-base -- --minify",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "lint": "eslint src --ext ts",
    "pretest": "tsc -p ./",
    "test": "vscode-test",
    "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/main.js --external:vscode --format=cjs --platform=node",
    "esbuild": "npm run esbuild-base -- --sourcemap",
    "esbuild-watch": "npm run esbuild-base -- --sourcemap --watch",
    "test-compile": "tsc -p ./",
    "publish:prerelease": "vsce publish --githubBranch master --pre-release",
    "publish": "vsce publish --githubBranch master",
    "pack:prerelease": "vsce pack --githubBranch master --pre-release",
    "pack": "vsce pack --githubBranch master"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.6",
    "@types/node": "18.x",
    "@types/vscode": "^1.85.0",
    "@typescript-eslint/eslint-plugin": "^6.15.0",
    "@typescript-eslint/parser": "^6.15.0",
    "@vscode/test-cli": "^0.0.4",
    "@vscode/test-electron": "^2.3.8",
    "esbuild": "^0.19.11",
    "eslint": "^8.56.0",
    "typescript": "^5.3.3"
  }
}
